"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fetchFlow = void 0;
// Copyright IBM Corp. 2023, 2024
const graphql_request_1 = require("graphql-request");
const fetchFlow = async (url, name, question, apikey) => {
    const requestHeaders = apikey
        ? {
            Authorization: `apikey ${apikey}`,
        }
        : undefined;
    const query = (0, graphql_request_1.gql) `query ${name}($input: String) {
      ${name}(input: $input)
    }
  `;
    const response = await (0, graphql_request_1.request)({
        url,
        document: query,
        variables: { input: question },
        requestHeaders: requestHeaders,
    })
        .then(data => {
        return data;
    })
        .catch(error => {
        return error;
    });
    if (response?.response?.errors) {
        return {
            error: {
                message: `Error requesting ${url}: \n` +
                    `${JSON.stringify(response.response.errors)}`,
            },
        };
    }
    return response;
};
exports.fetchFlow = fetchFlow;
//# sourceMappingURL=flow.js.map