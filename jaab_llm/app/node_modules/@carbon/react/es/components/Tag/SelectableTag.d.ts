/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import PropTypes from 'prop-types';
import React from 'react';
import { PolymorphicProps } from '../../types/common';
import { SIZES } from './Tag';
export interface SelectableTagBaseProps {
    /**
     * Provide a custom className that is applied to the containing <span>
     */
    className?: string;
    /**
     * Specify if the `SelectableTag` is disabled
     */
    disabled?: boolean;
    /**
     * Specify the id for the selectabletag.
     */
    id?: string;
    /**
     * Optional prop to render a custom icon.
     * Can be a React component class
     */
    renderIcon?: React.ElementType;
    /**
     * Provide an optional hook that is called when selected is changed
     */
    onChange?: (selected: boolean) => void;
    /**
     * Provide an optional function to be called when the tag is clicked.
     */
    onClick?: (e: Event) => void;
    /**
     * Specify the state of the selectable tag.
     */
    selected?: boolean;
    /**
     * Specify the size of the Tag. Currently supports either `sm`,
     * `md` (default) or `lg` sizes.
     */
    size?: keyof typeof SIZES;
    /**
     * Provide text to be rendered inside of a the tag.
     */
    text?: string;
}
export type SelectableTagProps<T extends React.ElementType> = PolymorphicProps<T, SelectableTagBaseProps>;
declare const SelectableTag: {
    <T extends React.ElementType<any, keyof React.JSX.IntrinsicElements>>({ className, disabled, id, renderIcon, onChange, onClick, selected, size, text, ...other }: SelectableTagProps<T>): import("react/jsx-runtime").JSX.Element;
    propTypes: {
        /**
         * Provide a custom className that is applied to the containing <span>
         */
        className: PropTypes.Requireable<string>;
        /**
         * Specify if the `SelectableTag` is disabled
         */
        disabled: PropTypes.Requireable<boolean>;
        /**
         * Specify the id for the tag.
         */
        id: PropTypes.Requireable<string>;
        /**
         * Optional prop to render a custom icon.
         * Can be a React component class
         */
        renderIcon: PropTypes.Requireable<object>;
        /**
         * Provide an optional hook that is called when selected is changed
         */
        onChange: PropTypes.Requireable<(...args: any[]) => any>;
        /**
         * Provide an optional function to be called when the tag is clicked.
         */
        onClick: PropTypes.Requireable<(...args: any[]) => any>;
        /**
         * Specify the state of the selectable tag.
         */
        selected: PropTypes.Requireable<boolean>;
        /**
         * Specify the size of the Tag. Currently supports either `sm`,
         * `md` (default) or `lg` sizes.
         */
        size: PropTypes.Requireable<string>;
        /**
         * Provide text to be rendered inside of a the tag.
         */
        text: PropTypes.Requireable<string>;
    };
};
export default SelectableTag;
